{"version":3,"sources":["app.js","environment.js","main.js","pages/about.js","pages/artist.js","pages/menu.js","pages/spotify.js","resources/index.js","pages/album.js"],"names":["App","configureRouter","config","router","map","route","moduleId","nav","title","name","fallbackRoute","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","About","Artist","http","artist","albums","activate","params","getArtist","id","getAlbum","artistUrl","get","res","content","albumUrl","items","album","Menu","Github","searchRes","searchMusic","searchStr","undefined","searchUrl","artists","Album"],"mappings":";;;;;;;;;;;;;KAAaA,cAAAA;;;;;gBACZC,2CAAgBC,QAAQC,QAAQ;AAC/B,QAAKA,MAAL,GAAcA,MAAd;;AAEAD,UAAOE,GAAP,CAAW,CACV;AACCC,WAAO,CAAC,EAAD,EAAI,SAAJ,CADR;AAECC,cAAU,iBAFX;AAGCC,SAAK,IAHN;AAICC,WAAO;AAJR,IADU,EAOV;AACCH,WAAO,OADR;AAECC,cAAU,eAFX;AAGCC,SAAK,IAHN;AAICC,WAAO;AAJR,IAPU,EAaV;AACCH,WAAO,QADR;AAECI,UAAM,QAFP;AAGCH,cAAU,gBAHX;AAICC,SAAK,IAJN;AAKCC,WAAO;AALR,IAbU,EAoBP;AACEH,WAAO,OADT;AAEEI,UAAM,OAFR;AAGEH,cAAU,eAHZ;AAIEC,SAAK,IAJP;AAKEC,WAAO;AALT,IApBO,CAAX;;AA6BAN,UAAOQ,aAAP,CAAqB,SAArB;AACA;;;;;;;;;;;oBClCa;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQZ,MAAR,CAAe;AACba,qBAAiB,sBAAYJ,KADhB;AAEbK,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;KCxBYC,gBAAAA;;;;;;;;;;;;;;;;;;;;MCIAC,iBAAAA,iBADZ;AAKA,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA,WAHlBC,MAGkB,GAHT,EAGS;AAAA,WAFjBC,MAEiB,GAFR,EAEQ;;AACjB,WAAKF,IAAL,GAAYA,IAAZ;AACA;;qBAEDG,6BAASC,QAAQ/B,QAAQ;AACtB,WAAKgC,SAAL,CAAeD,OAAOE,EAAtB;AACA,WAAKC,QAAL,CAAcH,OAAOE,EAArB;AACF;;qBAEDD,+BAAUC,IAAI;AAAA;;AACX,UAAIA,OAAO,EAAX,EAAgB;AACd,aAAKE,SAAL,GAAiB,wCAAwCF,EAAzD;AACA,eAAO,KAAKN,IAAL,CAAUS,GAAV,CAAc,KAAKD,SAAnB,EAA8BZ,IAA9B,CAAmC;AAAA,iBAAO,MAAKK,MAAL,GAAcS,IAAIC,OAAzB;AAAA,SAAnC,CAAP;AACD,OAHD,MAGO;AACL,aAAKV,MAAL,GAAc,EAAd;AACD;AACF;;qBAEDM,6BAASD,IAAI;AAAA;;AACX,UAAIA,OAAO,EAAX,EAAgB;AACd,aAAKM,QAAL,GAAgB,wCAAwCN,EAAxC,GAA6C,SAA7D;AACA,eAAO,KAAKN,IAAL,CAAUS,GAAV,CAAc,KAAKG,QAAnB,EAA6BhB,IAA7B,CAAkC;AAAA,iBAAO,OAAKM,MAAL,GAAcQ,IAAIC,OAAJ,CAAYE,KAAjC;AAAA,SAAlC,CAAP;AACD,OAHD,MAGO;AACL,aAAKC,KAAL,GAAa,EAAb;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KC/BUC,eAAAA;;;;;;;UACO;;;;;;;;;;;;;;;;;;;;MCCPC,iBAAAA,iBADZ;AAIA,oBAAYhB,IAAZ,EAAkB;AAAA;;AAAA,WAFjBiB,SAEiB,GAFL,EAEK;;AACjB,WAAKjB,IAAL,GAAYA,IAAZ;AACA;;qBAEDG,+BAAW;AACR,WAAKe,WAAL;AACF;;qBAEDA,qCAAc;AAAA;;AACX,UAAI,KAAKC,SAAL,KAAmBC,SAAnB,IAAgC,KAAKD,SAAL,KAAmB,EAAvD,EAA4D;AAC1D,aAAKE,SAAL,GAAiB,6CAA6C,KAAKF,SAAlD,GAA8D,0CAA/E;AACA,eAAO,KAAKnB,IAAL,CAAUS,GAAV,CAAc,KAAKY,SAAnB,EAA8BzB,IAA9B,CAAmC;AAAA,iBAAO,MAAKqB,SAAL,GAAiBP,IAAIC,OAAJ,CAAYW,OAAZ,CAAoBT,KAA5C;AAAA,SAAnC,CAAP;AACD,OAHD,MAGO;AACL,aAAKI,SAAL,GAAiB,EAAjB;AACD;AACF;;;;;;;;;;;UCtBajC,YAAAA;AAAT,WAASA,SAAT,CAAmBX,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;MCEYkD,gBAAAA,gBADZ;AAIC,mBAAYvB,IAAZ,EAAkB;AAAA;;AAAA,WAFlBE,MAEkB,GAFT,EAES;;AAChB,WAAKF,IAAL,GAAYA,IAAZ;AACD;;oBAEDG,6BAASC,QAAQ/B,QAAQ;AACvB,WAAKkC,QAAL,CAAcH,OAAOE,EAArB;AACD;;oBAEDC,6BAASD,IAAI;AAAA;;AACX,UAAIA,OAAO,EAAX,EAAgB;AACd,aAAKM,QAAL,GAAgB,wCAAwCN,EAAxC,GAA6C,SAA7D;AACA,eAAO,KAAKN,IAAL,CAAUS,GAAV,CAAc,KAAKG,QAAnB,EAA6BhB,IAA7B,CAAkC;AAAA,iBAAO,MAAKM,MAAL,GAAcQ,IAAIC,OAAJ,CAAYE,KAAjC;AAAA,SAAlC,CAAP;AACD,OAHD,MAGO;AACL,aAAKC,KAAL,GAAa,EAAb;AACD;AACF","file":"app-bundle.js","sourcesContent":["export class App {\n\tconfigureRouter(config, router) {\n\t\tthis.router = router;\n\n\t\tconfig.map([\n\t\t\t{\n\t\t\t\troute: [\"\",\"spotify\"],\n\t\t\t\tmoduleId: \"./pages/spotify\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"Aurelia Spotify\"\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: \"about\",\n\t\t\t\tmoduleId: \"./pages/about\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"About\"\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: \"artist\",\n\t\t\t\tname: \"artist\",\n\t\t\t\tmoduleId: \"./pages/artist\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"Artist\"\n\t\t\t},\n      {\n        route: \"album\",\n        name: \"album\",\n        moduleId: \"./pages/album\",\n        nav: true,\n        title: \"Album\"\n      }\n\t\t]);\n\n\t\tconfig.fallbackRoute('spotify');\n\t}\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class About {\n\t\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class Artist {\n\tartist = {};\n  albums = [];\n\n\tconstructor(http) {\n\t\tthis.http = http;\n\t}\n\n\tactivate(params, config) {\n    this.getArtist(params.id);\n    this.getAlbum(params.id);\n\t}\n\n\tgetArtist(id) {\n    if (id !== '' ) {\n      this.artistUrl = 'https://api.spotify.com/v1/artists/' + id;\n      return this.http.get(this.artistUrl).then(res => this.artist = res.content );\n    } else {\n      this.artist = {};\n    }\n  }\n\n  getAlbum(id) {\n    if (id !== '' ) {\n      this.albumUrl = 'https://api.spotify.com/v1/artists/' + id + '/albums';\n      return this.http.get(this.albumUrl).then(res => this.albums = res.content.items );\n    } else {\n      this.album = [];\n    }\n  }\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class Menu {\n\t@bindable router = null;\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class Github {\n  searchRes = [];\n\n\tconstructor(http) {\n\t\tthis.http = http;\n\t}\n\n\tactivate() {\n    this.searchMusic();\n\t}\n\n\tsearchMusic() { \n    if (this.searchStr !== undefined && this.searchStr !== '' ) {\n      this.searchUrl = 'https://api.spotify.com/v1/search?query=' + this.searchStr + '&offset=0&limit=20&type=artist&market=US';\n      return this.http.get(this.searchUrl).then(res => this.searchRes = res.content.artists.items);\n    } else {\n      this.searchRes = [];\n    }\n  }\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class Album {\n  albums = {};\n\n  constructor(http) {\n    this.http = http;\n  }\n\n  activate(params, config) {\n    this.getAlbum(params.id);\n  }\n\n  getAlbum(id) {\n    if (id !== '' ) {\n      this.albumUrl = 'https://api.spotify.com/v1/artists/' + id + '/albums';\n      return this.http.get(this.albumUrl).then(res => this.albums = res.content.items );\n    } else {\n      this.album = {};\n    }\n  }\n}\n"],"sourceRoot":"../src"}