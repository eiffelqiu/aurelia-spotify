{"version":3,"sources":["app.js","environment.js","main.js","pages/about.js","pages/artist.js","pages/menu.js","pages/spotify.js","resources/index.js"],"names":["App","configureRouter","config","router","map","route","moduleId","nav","title","href","mapUnknownRoutes","fallbackRoute","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","About","Artist","http","activate","Menu","Github","searchRes","searchMusic","searchStr","undefined","searchUrl","get","res","content","artists","items"],"mappings":";;;;;;;;;;;;;KAAaA,cAAAA;;;;;gBACZC,2CAAgBC,QAAQC,QAAQ;AAC/B,QAAKA,MAAL,GAAcA,MAAd;;AAEAD,UAAOE,GAAP,CAAW,CACV;AACCC,WAAO,CAAC,EAAD,EAAI,SAAJ,CADR;AAECC,cAAU,iBAFX;AAGCC,SAAK,IAHN;AAICC,WAAO;AAJR,IADU,EAOV;AACCH,WAAO,OADR;AAECC,cAAU,eAFX;AAGCC,SAAK,IAHN;AAICC,WAAO;AAJR,IAPU,EAaV;AACCH,WAAO,YADR;AAECI,UAAM,QAFP;AAGCH,cAAU,gBAHX;AAICC,SAAK,IAJN;AAKCC,WAAO;AALR,IAbU,CAAX;;AAsBAN,UAAOQ,gBAAP,CAAwB,WAAxB;AACAR,UAAOS,aAAP,CAAqB,SAArB;AACA;;;;;;;;;;;oBC5Ba;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQb,MAAR,CAAe;AACbc,qBAAiB,sBAAYJ,KADhB;AAEbK,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;KCxBYC,gBAAAA;;;;;;;;;;;;;;;;;;;;KCIAC,iBAAAA,iBADZ;AAEA,kBAAYC,IAAZ,EAAkB;AAAA;;AACjB,QAAKA,IAAL,GAAYA,IAAZ;AACA;;mBAEDC,+BAAW,CAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCTWC,eAAAA;;;;;;;UACO;;;;;;;;;;;;;;;;;;;;MCCPC,iBAAAA,iBADZ;AAIA,oBAAYH,IAAZ,EAAkB;AAAA;;AAAA,WAFjBI,SAEiB,GAFL,EAEK;;AACjB,WAAKJ,IAAL,GAAYA,IAAZ;AACA;;qBAEDC,+BAAW;AACR,WAAKI,WAAL;AACF;;qBAEDA,qCAAc;AAAA;;AACX,UAAI,KAAKC,SAAL,KAAmBC,SAAnB,IAAgC,KAAKD,SAAL,KAAmB,EAAvD,EAA4D;AAC1D,aAAKE,SAAL,GAAiB,6CAA6C,KAAKF,SAAlD,GAA8D,0CAA/E;AACA,eAAO,KAAKN,IAAL,CAAUS,GAAV,CAAc,KAAKD,SAAnB,EAA8BZ,IAA9B,CAAmC;AAAA,iBAAO,MAAKQ,SAAL,GAAiBM,IAAIC,OAAJ,CAAYC,OAAZ,CAAoBC,KAA5C;AAAA,SAAnC,CAAP;AACD,OAHD,MAGO;AACL,aAAKT,SAAL,GAAiB,EAAjB;AACD;AACF;;;;;;;;;;;UCtBapB,YAAAA;AAAT,WAASA,SAAT,CAAmBZ,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\n\tconfigureRouter(config, router) {\n\t\tthis.router = router;\n\n\t\tconfig.map([\n\t\t\t{\n\t\t\t\troute: [\"\",\"spotify\"],\n\t\t\t\tmoduleId: \"./pages/spotify\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"Aurelia Spotify\"\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: \"about\",\n\t\t\t\tmoduleId: \"./pages/about\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"About\"\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: \"artist/:id\",\n\t\t\t\thref: \"artist\",\n\t\t\t\tmoduleId: \"./pages/artist\",\n\t\t\t\tnav: true,\n\t\t\t\ttitle: \"Artist\"\n\t\t\t}\n\t\t]);\n\n\t\tconfig.mapUnknownRoutes('not-found');\n\t\tconfig.fallbackRoute('spotify');\n\t}\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class About {\n\t\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class Artist {\n\tconstructor(http) {\n\t\tthis.http = http;\n\t}\n\n\tactivate() {\n    \t\n\t}\n}","import {bindable} from 'aurelia-framework';\n\nexport class Menu {\n\t@bindable router = null;\n}","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class Github {\n  searchRes = [];\n\n\tconstructor(http) {\n\t\tthis.http = http;\n\t}\n\n\tactivate() {\n    this.searchMusic();\n\t}\n\n\tsearchMusic() { \n    if (this.searchStr !== undefined && this.searchStr !== '' ) {\n      this.searchUrl = 'https://api.spotify.com/v1/search?query=' + this.searchStr + '&offset=0&limit=20&type=artist&market=US';\n      return this.http.get(this.searchUrl).then(res => this.searchRes = res.content.artists.items);\n    } else {\n      this.searchRes = [];\n    }\n  }\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}